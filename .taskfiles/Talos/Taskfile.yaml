---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: "3"

vars:
  TALOSCTL_ARGS: --talosconfig <(sops --decrypt talosconfig.secret.sops.yaml)
  VYOS_ADDR: vyos.turbo.ac
  VYOS_USER: devin
  # These matchbox dirs should be pre-created on the vyos host
  #   mkdir -p /config/containers/matchbox/data/{groups,profiles,assets}
  VYOS_MATCHBOX_DIR: /config/containers/matchbox/data
  VYOS_MATCHBOX_GROUPS_DIR: "{{.VYOS_MATCHBOX_DIR}}/groups"
  VYOS_MATCHBOX_PROFILES_DIR: "{{.VYOS_MATCHBOX_DIR}}/profiles"
  VYOS_MATCHBOX_ASSETS_DIR: "{{.VYOS_MATCHBOX_DIR}}/assets"

tasks:

  # task talos:ctl cluster=main -- health
  ctl:
    desc: Talosctl Wrapper
    dir: "{{.KUBERNETES_DIR}}/{{.cluster}}/talos"
    cmd: talosctl {{.TALOSCTL_ARGS}} {{.CLI_ARGS}}
    requires:
      vars: ["cluster"]

  bootstrap:
    desc: Bootstrap Talos
    dir: "{{.KUBERNETES_DIR}}/{{.cluster}}/talos"
    cmds:
      - task: bootstrap-etcd
        vars:
          cluster: "{{.cluster}}"
          controller: "{{.controller}}"
      - task: fetch-kubeconfig
        vars:
          cluster: "{{.cluster}}"
      - task: bootstrap-core-apps
        vars:
          cluster: "{{.cluster}}"
    requires:
      vars: ["cluster", "controller"]

  bootstrap-etcd:
    desc: Bootstrap Etcd
    dir: "{{.KUBERNETES_DIR}}/{{.cluster}}/talos"
    cmds:
      - talosctl {{.TALOSCTL_ARGS}} config endpoint {{.controller}}
      - talosctl {{.TALOSCTL_ARGS}} config node {{.controller}}
      - talosctl {{.TALOSCTL_ARGS}} bootstrap
    requires:
      vars: ["cluster", "controller"]

  fetch-kubeconfig:
    desc: Fetch kubeconfig from Talos controllers
    dir: "{{.KUBERNETES_DIR}}/{{.cluster}}/talos"
    cmd: |
      talosctl {{.TALOSCTL_ARGS}} kubeconfig \
          --force --force-context-name {{.cluster}} {{.KUBERNETES_DIR}}/{{.cluster}}
    requires:
      vars: ["cluster"]

  bootstrap-core-apps:
    desc: Bootstrap core apps
    dir: "{{.KUBERNETES_DIR}}/{{.cluster}}/talos"
    cmds:
      - for: ["cilium", "kubelet-csr-approver"]
        task: .apply-core-apps
        vars:
          app: '{{.ITEM}}'
    requires:
      vars: ["cluster"]

  bootstrap-matchbox:
    desc: Sync required Matchbox configuration to Vyos for PXE Boot
    dir: "{{.KUBERNETES_DIR}}/{{.cluster}}/talos"
    cmds:
      - for: ["controller.secret.sops.yaml", "worker.secret.sops.yaml"]
        cmd: |
          sops --decrypt {{.ITEM}} | \
              curl -skT - -u {{.VYOS_USER}}: \
                  sftp://{{.VYOS_ADDR}}/{{.VYOS_MATCHBOX_ASSETS_DIR}}/$(basename {{.ITEM | replace ".secret.sops.yaml" ".yaml"}})
      - 'curl -skT "matchbox/groups/k8s-[0-5].json" -u {{.VYOS_USER}}: sftp://{{.VYOS_ADDR}}/{{.VYOS_MATCHBOX_GROUPS_DIR}}/'
      - 'curl -skT "matchbox/profiles/{talos-controller.json,talos-worker.json}" -u {{.VYOS_USER}}: sftp://{{.VYOS_ADDR}}/{{.VYOS_MATCHBOX_PROFILES_DIR}}/'
      - ssh -l {{.VYOS_USER}} {{.VYOS_ADDR}} -t /opt/vyatta/bin/vyatta-op-cmd-wrapper "restart container matchbox"
    requires:
      vars: ["cluster"]

  upgrade-talos:
    desc: Upgrade Talos on a node
    cmd: talosctl {{.TALOSCTL_ARGS}} --nodes {{.node}} upgrade --image {{.image}} --preserve=true
    requires:
      vars: ["node", "image"]
    preconditions:
      - { msg: "Node not found", sh: "talosctl --nodes {{.node}} get machineconfig" }

  upgrade-k8s:
    desc: Upgrade k8s on a node
    cmd: talosctl {{.TALOSCTL_ARGS}} --nodes {{.node}} upgrade-k8s --to {{.to}}
    requires:
      vars: ["node", "to"]
    preconditions:
      - { msg: "Node not found", sh: "talosctl --nodes {{.node}} get machineconfig" }

  .apply-core-apps:
    internal: true
    dir: "{{.KUBERNETES_DIR}}/{{.cluster}}/talos"
    cmds:
      - kubectl kustomize --enable-helm ./{{.app}} | kubectl --context {{.cluster}} apply --server-side --filename -
      - defer: rm -rf ./{{.app}}/charts
    requires:
      vars: ["app"]
