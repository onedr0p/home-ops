---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: "3"

x-env: &env
  disk: "{{.disk}}"
  job: "{{.job}}"
  node: "{{.node}}"

vars:
  rook_scripts_dir: '{{.ROOT_DIR}}/.taskfiles/Rook/scripts'
  rook_templates_dir: '{{.ROOT_DIR}}/.taskfiles/Rook/templates'

tasks:

  wipe-main:
    desc: Wipe specified disk drives and delete /var/lib/rook on all nodes in the main cluster
    cmds:
      - for: { var: nodes }
        task: wipe-disk
        vars:
          cluster: '{{.cluster}}'
          node: '{{.ITEM}}'
          disk: '{{.disk}}'
      - for: { var: nodes }
        task: wipe-data
        vars:
          cluster: '{{.cluster}}'
          node: '{{.ITEM}}'
    vars:
      cluster: main
      disk: /dev/nvme0n1
      nodes: k8s-0 k8s-1 k8s-2 k8s-3 k8s-4 k8s-5

  wipe-disk:
    desc: Wipe all remnants of rook-ceph from a given cluster, node and disk
    summary: |
      Args:
        cluster: Cluster to run command against (required)
        disk: Disk to wipe (required)
        node: Node the disk is on (required)
    cmds:
      - envsubst < <(cat {{.rook_templates_dir}}/WipeDiskJob.tmpl.yaml) | kubectl --context {{.cluster}} apply -f -
      - bash {{.rook_scripts_dir}}/wait-for-job.sh {{.job}} default {{.cluster}}
      - kubectl --context {{.cluster}} -n default wait job/{{.job}} --for condition=complete --timeout=1m
      - kubectl --context {{.cluster}} -n default logs job/{{.job}}
      - kubectl --context {{.cluster}} -n default delete job {{.job}}
    env: *env
    requires:
      vars: ["cluster", "disk", "node"]
    vars:
      job: wipe-disk-{{.node}}-{{.disk | replace "/" "-"}}
    preconditions:
      - test -f {{.rook_scripts_dir}}/wait-for-job.sh
      - test -f {{.rook_templates_dir}}/WipeDiskJob.tmpl.yaml

  wipe-data:
    desc: Wipe all remnants of rook-ceph from a given cluster and node
    summary: |
      Args:
        cluster: Cluster to run command against (required)
        node: Node the data is on (required)
    cmds:
      - envsubst < <(cat {{.rook_templates_dir}}/WipeDataJob.tmpl.yaml) | kubectl --context {{.cluster}} apply -f -
      - bash {{.rook_scripts_dir}}/wait-for-job.sh {{.job}} default {{.cluster}}
      - kubectl --context {{.cluster}} -n default wait job/{{.job}} --for condition=complete --timeout=1m
      - kubectl --context {{.cluster}} -n default logs job/{{.job}}
      - kubectl --context {{.cluster}} -n default delete job {{.job}}
    env: *env
    requires:
      vars: ["cluster", "node"]
    vars:
      job: wipe-data-{{.node}}
    preconditions:
      - test -f {{.rook_scripts_dir}}/wait-for-job.sh
      - test -f {{.rook_templates_dir}}/WipeDataJob.tmpl.yaml
