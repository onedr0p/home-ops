---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/helm.toolkit.fluxcd.io/helmrelease_v2.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: kube-prometheus-stack
spec:
  chartRef:
    kind: OCIRepository
    name: kube-prometheus-stack
  interval: 1h
  values:
    cleanPrometheusOperatorObjectNames: true
    alertmanager:
      route:
        main:
          enabled: true
          hostnames:
            - alertmanager.turbo.ac
          parentRefs:
            - name: envoy-internal
              namespace: network
        alertmanagerSpec:
        alertmanagerConfiguration:
          name: alertmanager
        externalUrl: https://alertmanager.turbo.ac
        storage:
          volumeClaimTemplate:
            spec:
              storageClassName: ceph-block
              resources:
                requests:
                  storage: 1Gi
    kubeEtcd:
      service:
        selector:
          component: kube-apiserver # etcd runs on control plane nodes
    kubeProxy:
      enabled: false
    prometheus:
      route:
        main:
          enabled: true
          hostnames:
            - prometheus.turbo.ac
          parentRefs:
            - name: envoy-internal
              namespace: network
        prometheusSpec:
        externalUrl: https://prometheus.turbo.ac
        version: v2.55.1 # override 'unsupported Prometheus version' error
        image:
          registry: docker.io
          repository: prompp/prompp
          tag: 0.6.1
        securityContext:
          runAsNonRoot: true
          runAsUser: 64535
          runAsGroup: 64535
          fsGroup: 64535
        podMonitorSelectorNilUsesHelmValues: false
        probeSelectorNilUsesHelmValues: false
        ruleSelectorNilUsesHelmValues: false
        scrapeConfigSelectorNilUsesHelmValues: false
        serviceMonitorSelectorNilUsesHelmValues: false
        retention: 14d
        retentionSize: 50GB
        resources:
          requests:
            cpu: 100m
          limits:
            memory: 2000Mi
        storageSpec:
          volumeClaimTemplate:
            spec:
              storageClassName: ceph-block
              resources:
                requests:
                  storage: 50Gi
    prometheus-node-exporter:
      fullnameOverride: node-exporter
    kube-state-metrics:
      fullnameOverride: kube-state-metrics
    grafana:
      enabled: false
      forceDeployDashboards: true
      operator:
        dashboardsConfigMapRefEnabled: true
        folder: observability
        matchLabels:
          grafana.internal/instance: grafana
    additionalPrometheusRulesMap:
      dockerhub-rules:
        groups:
          - name: dockerhub
            rules:
              - alert: DockerhubRateLimitRisk
                annotations:
                  summary: There are {{ $value }} containers pulling from Dockerhub. This may lead to rate limiting.
                expr: count(time() - container_last_seen{image=~"(docker.io).*",container!=""} < 30) > 100
                labels:
                  severity: critical
      oom-rules:
        groups:
          - name: oom
            rules:
              - alert: OomKilled
                annotations:
                  summary: Container {{ $labels.container }} in pod {{ $labels.namespace }}/{{ $labels.pod }} has been OOMKilled {{ $value }} times in the last 10 minutes.
                expr: (kube_pod_container_status_restarts_total - kube_pod_container_status_restarts_total offset 10m >= 1) and ignoring (reason) min_over_time(kube_pod_container_status_last_terminated_reason{reason="OOMKilled"}[10m]) == 1
                labels:
                  severity: critical
      zfs-rules:
        groups:
          - name: zfs
            rules:
              - alert: ZfsUnexpectedPoolState
                annotations:
                  summary: ZFS pool {{$labels.zpool}} on {{$labels.instance}} is in a unexpected state {{$labels.state}}
                expr: node_zfs_zpool_state{state!="online"} > 0
                labels:
                  severity: critical
