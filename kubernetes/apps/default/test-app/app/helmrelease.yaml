---
# yaml-language-server: $schema=https://raw.githubusercontent.com/bjw-s/helm-charts/main/charts/other/app-template/schemas/helmrelease-helm-v2.schema.json
apiVersion: helm.toolkit.fluxcd.io/v2
kind: HelmRelease
metadata:
  name: test-app
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 3.6.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  install:
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      strategy: rollback
      retries: 3
  dependsOn:
    - name: rook-ceph-cluster
      namespace: rook-ceph
  values:
    controllers:
      main:
        type: statefulset
        containers:
          app:
            image:
              repository: ghcr.io/onedr0p/atuin-server-sqlite
              tag: v18.3.0@sha256:9d8e8b983d8a8113d87a72111b158552d49ad050ef98ebfe3e7bdd12a5207466
            env:
              ATUIN_PORT: &port 80
              ATUIN_OPEN_REGISTRATION: "true"
              TZ: America/New_York
            probes:
              liveness: &probes
                enabled: true
                custom: true
                spec:
                  httpGet:
                    path: /
                    port: *port
                  initialDelaySeconds: 0
                  periodSeconds: 10
                  timeoutSeconds: 1
                  failureThreshold: 3
              readiness: *probes
            securityContext:
              allowPrivilegeEscalation: false
              readOnlyRootFilesystem: true
              capabilities: { drop: ["ALL"] }
            resources:
              requests:
                cpu: 10m
              limits:
                memory: 256Mi
    defaultPodOptions:
      securityContext:
        runAsNonRoot: true
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
        fsGroupChangePolicy: OnRootMismatch
        seccompProfile: { type: RuntimeDefault }
    service:
      main:
        controller: main
        ports:
          http:
            primary: true
            port: *port
    ingress:
      main:
        className: internal
        hosts:
          - host: "{{ .Release.Name }}.devbu.io"
            paths:
              - path: /
                service:
                  identifier: main
                  port: http
    volumeClaimTemplates:
      - name: config
        accessMode: ReadWriteOnce
        dataSourceRef:
          kind: ReplicationDestination
          apiGroup: volsync.backube
          name: test-app-dst
        globalMounts:
          - mountPath: /config
        size: 1Gi
        storageClass: ceph-block
