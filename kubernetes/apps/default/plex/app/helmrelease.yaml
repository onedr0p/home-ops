---
# yaml-language-server: $schema=https://kubernetes-schemas.devbu.io/helm.toolkit.fluxcd.io/helmrelease_v2beta1.json
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: plex
  namespace: default
spec:
  interval: 30m
  chart:
    spec:
      chart: app-template
      version: 1.5.1
      sourceRef:
        kind: HelmRepository
        name: bjw-s
        namespace: flux-system
  maxHistory: 2
  install:
    createNamespace: true
    remediation:
      retries: 3
  upgrade:
    cleanupOnFail: true
    remediation:
      retries: 3
  uninstall:
    keepHistory: false
  dependsOn:
    - name: intel-device-plugin-gpu
      namespace: kube-system
    - name: rook-ceph-cluster
      namespace: rook-ceph
    - name: volsync
      namespace: volsync
  values:
    controller:
      type: statefulset
      annotations:
        reloader.stakater.com/auto: "true"
    image:
      repository: ghcr.io/onedr0p/plex
      tag: 1.32.3.7192-7aa441827@sha256:37d2f31b16caf3faa4e0e6a6a9f0cc838d5f4dc878ef3b2c326e726026e73ec4
    env:
      TZ: America/New_York
    service:
      main:
        ports:
          http:
            port: 32400
    ingress:
      main:
        enabled: true
        ingressClassName: nginx
        annotations:
          external-dns.alpha.kubernetes.io/target: ingress.devbu.io
          nginx.ingress.kubernetes.io/backend-protocol: "HTTPS"
          hajimari.io/icon: mdi:plex
        hosts:
          - host: &host "{{ .Release.Name }}.devbu.io"
            paths:
              - path: /
                pathType: Prefix
        tls:
          - hosts:
              - *host
    podSecurityContext:
      runAsUser: 568
      runAsGroup: 568
      fsGroup: 568
      fsGroupChangePolicy: OnRootMismatch
      supplementalGroups: [44, 109, 10000]
    volumeClaimTemplates:
      - name: config
        mountPath: /config
        accessMode: ReadWriteOnce
        size: 100Gi
        storageClass: ceph-block
    persistence:
      media:
        enabled: true
        type: nfs
        server: expanse.turbo.ac
        path: /eros/Media
        mountPath: /media
        readOnly: true
      transcode:
        enabled: true
        type: emptyDir
      local:
        enabled: true
        type: emptyDir
        mountPath: /.local
    nodeSelector:
      node-role.kubernetes.io/worker: "true"
      intel.feature.node.kubernetes.io/gpu: "true"
    affinity:
      podAntiAffinity:
        requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
                - key: app.kubernetes.io/name
                  operator: In
                  values: ["frigate"]
            topologyKey: kubernetes.io/hostname
    resources:
      requests:
        gpu.intel.com/i915: 1
        cpu: 100m
        memory: 2000Mi
      limits:
        gpu.intel.com/i915: 1
        memory: 10000Mi
    sidecars:
      auto-languages:
        image: docker.io/remirigal/plex-auto-languages:v1.2.1
        imagePullPolicy: IfNotPresent
        env:
          - { name: PLEX_URL, value: http://localhost:32400 }
          - { name: REFRESH_LIBRARY_ON_SCAN, value: "false" }
        envFrom:
          - secretRef:
              name: plex-auto-languages-secret
        volumeMounts:
          - { name: local, mountPath: /.local }
