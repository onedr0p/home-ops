---
# yaml-language-server: $schema=https://kubernetes-schemas.pages.dev/external-secrets.io/externalsecret_v1beta1.json
apiVersion: external-secrets.io/v1beta1
kind: ExternalSecret
metadata:
  name: alertmanager
spec:
  refreshInterval: 5m
  secretStoreRef:
    kind: ClusterSecretStore
    name: onepassword-connect
  target:
    name: alertmanager-secret
    template:
      engineVersion: v2
      data:
        # Yo dawg I heard you like go templating so I put go templates in your go templates
        alertmanager.yaml: |
          global:
            resolve_timeout: 5m
          route:
            group_by: ["alertname", "job"]
            group_interval: 10m
            group_wait: 1m
            receiver: pushover
            repeat_interval: 12h
            routes:
              - receiver: heartbeat
                group_interval: 5m
                group_wait: 0s
                matchers:
                  - alertname =~ "Watchdog"
                repeat_interval: 5m
              - receiver: "null"
                matchers:
                  - alertname =~ "InfoInhibitor"
              - receiver: pushover
                continue: true
                matchers:
                  - severity = "critical"
          inhibit_rules:
            - equal: ["alertname", "namespace"]
              source_matchers:
                - severity = "critical"
              target_matchers:
                - severity = "warning"
          receivers:
            - name: heartbeat
              webhook_configs:
                - send_resolved: true
                  url: "{{ .ALERTMANAGER_UPTIMEROBOT_HEARTBEAT_URL }}"
            - name: "null"
            - name: pushover
              pushover_configs:
                - html: true
                  message: |-
                    {{ "{{-" }} range .Alerts {{ "}}" }}
                      {{ "{{-" }} if ne .Annotations.description "" {{ "}}" }}
                        {{ "{{" }} .Annotations.description {{ "}}" }}
                      {{ "{{-" }} else if ne .Annotations.summary "" {{ "}}" }}
                        {{ "{{" }} .Annotations.summary {{ "}}" }}
                      {{ "{{-" }} else if ne .Annotations.message "" {{ "}}" }}
                        {{ "{{" }} .Annotations.message {{ "}}" }}
                      {{ "{{-" }} else {{ "}}" }}
                        Alert description not available
                      {{ "{{-" }} end {{ "}}" }}
                      {{ "{{-" }} if gt (len .Labels.SortedPairs) 0 {{ "}}" }}
                        <small>
                        {{ "{{-" }} range .Labels.SortedPairs {{ "}}" }}
                          <b>{{ "{{" }} .Name {{ "}}" }}:</b> {{ "{{" }} .Value {{ "}}" }}
                        {{ "{{-" }} end {{ "}}" }}
                        </small>
                      {{ "{{-" }} end {{ "}}" }}
                    {{ "{{-" }} end {{ "}}" }}
                  priority: |-
                    {{ "{{" }} if eq .Status "firing" {{ "}}" }}1{{ "{{" }} else {{ "}}" }}0{{ "{{" }} end {{ "}}" }}
                  send_resolved: true
                  sound: gamelan
                  # ttl: 1d
                  title: >-
                    [{{ "{{" }} .Status | toUpper {{ "}}" }}{{ "{{" }} if eq .Status "firing" {{ "}}" }}:{{ "{{" }} .Alerts.Firing | len {{ "}}" }}{{ "{{" }} end {{ "}}" }}]
                    {{ "{{" }} .CommonLabels.alertname {{ "}}" }}
                  token: "{{ .ALERTMANAGER_PUSHOVER_TOKEN }}"
                  url_title: View in Alertmanager
                  user_key: "{{ .PUSHOVER_USER_KEY }}"
  dataFrom:
    - extract:
        key: pushover
    - extract:
        key: alertmanager
