---
# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: "Flux Helm Release Image Test"

on:
  pull_request:
    branches: ["main"]
    paths: ["kubernetes/**/helmrelease.yaml"]

env:
  AQUA_CONFIG: ./.github/aqua.yaml
  KUBERNETES_DIR: ./kubernetes

jobs:
  changed-files:
    name: Get Changed Files
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.changed-files.outputs.all_changed_and_modified_files }}
    steps:
      - name: Generate Token
        uses: actions/create-github-app-token@2986852ad836768dfea7781f31828eb3e17990fa # v1.6.2
        id: app-token
        with:
          app-id: "${{ secrets.BOT_APP_ID }}"
          private-key: "${{ secrets.BOT_APP_PRIVATE_KEY }}"

      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          token: "${{ steps.app-token.outputs.token }}"
          fetch-depth: 0

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@56284d80811fb5963a972b438f2870f175e5b7c8 # v40.2.3
        with:
          files: kubernetes/**/helmrelease.yaml
          json: true
          quotepath: false
          escape_json: false

      - name: List all changed files
        run: echo "${{ steps.changed-files.outputs.all_changed_and_modified_files }}"

  extract-images:
    name: Extract images from Helm Release
    runs-on: ubuntu-latest
    needs: ["changed-files"]
    strategy:
      matrix:
        files: ${{ fromJSON(needs.changed-files.outputs.matrix) }}
      max-parallel: 4
      fail-fast: false
    outputs:
      matrix: ${{ steps.extract-images.outputs.images }}
    steps:
      - name: Generate Token
        uses: actions/create-github-app-token@2986852ad836768dfea7781f31828eb3e17990fa # v1.6.2
        id: app-token
        with:
          app-id: "${{ secrets.BOT_APP_ID }}"
          private-key: "${{ secrets.BOT_APP_PRIVATE_KEY }}"

      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          token: "${{ steps.app-token.outputs.token }}"
          fetch-depth: 0

      - name: Install System Tools
        shell: bash
        run: sudo apt-get -qq update && sudo apt-get -qq install --no-install-recommends -y curl git jo

      - name: Cache Aqua
        uses: actions/cache@704facf57e6136b1bc63b828d79edcd491f0ee84 # v3.3.2
        with:
          path: ~/.local/share/aquaproj-aqua
          key: v1-aqua-installer-${{runner.os}}-${{runner.arch}}-${{hashFiles('./.github/aqua.yaml')}}
          restore-keys: |
            v1-aqua-installer-${{runner.os}}-${{runner.arch}}-

      - name: Install Aqua and CLI Tools
        uses: aquaproj/aqua-installer@928a2ee4243a9ee8312d80dc8cbaca88fb602a91 # v2.2.0
        with:
          aqua_version: v2.21.3
          aqua_opts: ""
        env:
          GITHUB_TOKEN: "${{ steps.app-token.outputs.token }}"

      - name: Extract Images from Helm Release
        id: extract-images
        run: |
          images=$(npx zx ./.github/scripts/extract-images.mjs --kubernetes-dir "${{ env.KUBERNETES_DIR }}" --helmrelease "${{ matrix.files }}")
          echo "images=${images}" >> $GITHUB_OUTPUT
          echo "${images}"

  test-images:
    name: Test images from Helm Release
    runs-on: ubuntu-latest
    needs: ["extract-images"]
    strategy:
      matrix:
        images: ${{ fromJSON(needs.extract-images.outputs.matrix) }}
      max-parallel: 4
      fail-fast: false
    steps:
      - name: Test Images from Helm Release
        run: docker pull ${{ matrix.images }}
