---
# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: "Publish Schemas"

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * 0"
  push:
    branches: ["main"]
    paths: [".github/workflows/publish-schemas.yaml"]

env:
  AQUA_GLOBAL_CONFIG: ./.github/aqua.yaml
  SCHEMAS_DIR: /home/runner/crds

jobs:
  publish-schemas:
    name: Publish Schemas
    runs-on: ["arc-runner-set-home-ops"]
    permissions:
      contents: read
      packages: write
    steps:
      - name: Generate Token
        uses: actions/create-github-app-token@2986852ad836768dfea7781f31828eb3e17990fa # v1.6.2
        id: app-token
        with:
          app-id: "${{ secrets.BOT_APP_ID }}"
          private-key: "${{ secrets.BOT_APP_PRIVATE_KEY }}"

      - name: Checkout
        uses: actions/checkout@b4ffde65f46336ab88eb53be808477a3936bae11 # v4.1.1
        with:
          token: "${{ steps.app-token.outputs.token }}"

      - name: Install System Tools
        shell: bash
        run: sudo apt-get -qq update && sudo apt-get -qq install --no-install-recommends -y curl git jo

      - name: Cache Aqua
        uses: actions/cache@704facf57e6136b1bc63b828d79edcd491f0ee84 # v3.3.2
        with:
          path: ~/.local/share/aquaproj-aqua
          key: v1-aqua-installer-${{runner.os}}-${{runner.arch}}-${{hashFiles('./.github/aqua.yaml')}}
          restore-keys: |
            v1-aqua-installer-${{runner.os}}-${{runner.arch}}-

      - name: Install Aqua and CLI Tools
        uses: aquaproj/aqua-installer@928a2ee4243a9ee8312d80dc8cbaca88fb602a91 # v2.2.0
        with:
          aqua_version: v2.21.3
          aqua_opts: -a
        env:
          GITHUB_TOKEN: "${{ steps.app-token.outputs.token }}"

      - name: Write kubeconfig
        id: kubeconfig
        uses: timheuer/base64-to-file@784a1a4a994315802b7d8e2084e116e783d157be # v1.2.4
        with:
          encodedString: "${{ secrets.KUBECONFIG }}"
          fileName: kubeconfig

      - name: Setup Python
        uses: actions/setup-python@0a5c61591373683505ea898e09a3ea4f39ef2b9c # v5.0.0
        with:
          python-version: 3.x

      - name: Test
        run: command -v kubectl && kubectl version --client

      - name: Download and run crd-extractor
        env:
          KUBECONFIG: "${{ steps.kubeconfig.outputs.filePath }}"
        shell: bash
        run: |
          mkdir -p ${{ env.SCHEMAS_DIR }}
          curl -fsSL -o $GITHUB_WORKSPACE/crd-extractor.sh \
              https://raw.githubusercontent.com/datreeio/CRDs-catalog/main/Utilities/crd-extractor.sh
          chmod u+x $GITHUB_WORKSPACE/crd-extractor.sh
          bash $GITHUB_WORKSPACE/crd-extractor.sh
          mv /home/runner/.datree/crdSchemas/* ${{ env.SCHEMAS_DIR }}

      - name: Setup Node
        uses: actions/setup-node@b39b52d1213e96004bfcb1c61a8a6fa8ab84f3e8 # v4.0.1
        with:
          node-version: 18.x

      - name: Deploy to Cloudflare Pages
        uses: cloudflare/wrangler-action@a8be0ea72a399752dd2735fa16ea0d424f2335ca # v3.4.0
        with:
          apiToken: "${{ secrets.CLOUDFLARE_API_TOKEN }}"
          accountId: "${{ secrets.CLOUDFLARE_ACCOUNT_ID }}"
          workingDirectory: "${{ env.SCHEMAS_DIR }}"
          command: pages deploy --project-name=kubernetes-schemas --branch main .
