---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: vector-agent
  namespace: monitoring
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://helm.vector.dev
      chart: vector-agent
      version: 0.21.0
      sourceRef:
        kind: HelmRepository
        name: vector-charts
        namespace: flux-system
      interval: 5m
  values:
    env:
      - name: VECTOR_WATCH_CONFIG
        value: "true"
    customConfig:
      data_dir: /vector-data-dir
      # Sources
      sources:
        journal_logs:
          type: journald
          journal_directory: /var/log/journal
        kubernetes_logs:
          type: kubernetes_logs
        firewall_logs:
          type: syslog
          address: 0.0.0.0:5140
          mode: udp
      # Transformations
      transforms:
        firewall_filterlog:
          type: remap
          inputs:
            - opnsense_firewall_logs
          source: |
            if .appname == "filterlog" {
              message_array = parse_csv!(string!(.message))
              # ipv4 and ipv6
              if message_array[8] == "4" || message_array[8] == "6" {
                .filteriface   = message_array[4]
                .filterflow    = message_array[7]
                .filteraction  = message_array[6]
                .filteripver   = message_array[8]
                # ipv4
                if message_array[8] == "4" {
                  .filterproto   = message_array[16]
                  .filterflags   = message_array[23]
                  .filtersrcip   = message_array[18]
                  .filtersrcport = message_array[20]
                  .filterdstip   = message_array[19]
                  .filterdstport = message_array[21]
                # ipv6
                } else if message_array[8] == "6" {
                  .filterproto   = message_array[12]
                  #.filterflags   = "IPv6 not fully supported"
                  .filtersrcip   = message_array[15]
                  .filtersrcport = message_array[17]
                  .filterdstip   = message_array[16]
                  .filterdstport = message_array[18]
                }
              }
            }
        firewall_split:
          type: route
          inputs:
            - firewall_filterlog
          route:
            pass: >-
              '.filteraction == "pass"'
            rest: >-
              '.filteraction != "pass"'
        firewall_geotag:
          type: geoip
          inputs:
            - firewall_split.pass
          database: /etc/vector/GeoLite2-City.mmdb
          source: filtersrcip
          target: geotag
      # Sinks
      sinks:
        loki_journal_sink:
          type: loki
          inputs:
            - journal_logs
          endpoint: http://loki:3100
          encoding:
            codec: json
          batch:
            max_bytes: 2049000
          out_of_order_action: rewrite_timestamp
          remove_label_fields: true
          remove_timestamp: true
          labels:
            hostname: >-
              {{`{{ host }}`}}
        loki_kubernetes_sink:
          type: loki
          inputs:
            - kubernetes_logs
          endpoint: http://loki:3100
          encoding:
            codec: json
          batch:
            max_bytes: 2049000
          out_of_order_action: rewrite_timestamp
          remove_label_fields: true
          remove_timestamp: true
          labels:
            app: >-
              {{`{{ kubernetes.pod_labels.app\.kubernetes\.io/name }}`}}
            container: >-
              {{`{{ kubernetes.container_name }}`}}
            filename: >-
              {{`{{ kubernetes.file }}`}}
            instance: >-
              {{`{{ kubernetes.pod_labels.app\.kubernetes\.io/instance }}`}}
            namespace: >-
              {{`{{ kubernetes.pod_namespace }}`}}
            node: >-
              {{`{{ kubernetes.pod_node_name }}`}}
            pod: >-
              {{`{{ kubernetes.pod_name }}`}}
        loki_firewall_sink:
          type: loki
          inputs:
            - firewall_split.rest
            - firewall_geotag
          endpoint: http://loki:3100
          encoding:
            codec: json
          batch:
            max_bytes: 2049000
          labels:
            hostname: opnsense
    service:
      enabled: true
      type: LoadBalancer
      ports:
        - name: firewall
          port: 5140
          protocol: TCP
          targetPort: 5140
    podMonitor:
      enabled: true
    securityContext:
      privileged: true
    extraVolumes:
      - name: journald
        hostPath:
          path: /var/log/journal
    extraVolumeMounts:
      - name: journald
        mountPath: /var/log/journal
        readOnly: true
  postRenderers:
    - kustomize:
        patchesJson6902:
          - target:
              kind: Service
              name: vector-agent
            patch:
              - op: add
                path: /spec/externalIPs
                value:
                  - "192.168.69.129"
